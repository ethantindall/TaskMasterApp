Index: app/src/main/res/layout/fragment_month.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:layout_gravity=\"center\">\r\n\r\n    <CalendarView\r\n        android:id=\"@+id/calendarView\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginStart=\"28dp\"\r\n        android:layout_marginLeft=\"28dp\"\r\n        android:layout_marginEnd=\"33dp\"\r\n        android:layout_marginRight=\"33dp\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/recyclerview\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"305dp\"\r\n        android:layout_marginStart=\"1dp\"\r\n        android:padding=\"10dp\"\r\n        android:layout_marginLeft=\"0dp\"\r\n        android:layout_marginTop=\"315dp\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_month.xml	(revision 0bbb3f162100517a63de5e8fe51e58e36a7ca717)
+++ app/src/main/res/layout/fragment_month.xml	(date 1607795519324)
@@ -6,26 +6,11 @@
     android:layout_height="match_parent"
     android:layout_gravity="center">
 
-    <CalendarView
-        android:id="@+id/calendarView"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginStart="28dp"
-        android:layout_marginLeft="28dp"
-        android:layout_marginEnd="33dp"
-        android:layout_marginRight="33dp"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent" />
-
     <androidx.recyclerview.widget.RecyclerView
         android:id="@+id/recyclerview"
         android:layout_width="match_parent"
-        android:layout_height="305dp"
-        android:layout_marginStart="1dp"
+        android:layout_height="match_parent"
         android:padding="10dp"
-        android:layout_marginLeft="0dp"
-        android:layout_marginTop="315dp"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent" />
+        tools:layout_editor_absoluteX="1dp"
+        tools:layout_editor_absoluteY="315dp" />
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/taskmaster/MonthViewFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.taskmaster;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.CalendarView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\n\r\npublic class MonthViewFragment extends Fragment {\r\n    private CalendarView mCalendarView;\r\n    private RecyclerView recyclerView;\r\n\r\n\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        getActivity().setTitle(\"TaskMaster - Tasks Due This Month\");\r\n\r\n        //return super.onCreateView(inflater, container, savedInstanceState);\r\n        View view = inflater.inflate(R.layout.fragment_month, container, false);\r\n\r\n        // Add the following lines to create RecyclerView\r\n        recyclerView = view.findViewById(R.id.recyclerview);\r\n        recyclerView.setHasFixedSize(true);\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(view.getContext()));\r\n        recyclerView.setAdapter(new TaskListAdapter());\r\n        return view;\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\r\n        mCalendarView = (CalendarView) getView().findViewById(R.id.calendarView);\r\n        mCalendarView.setOnDateChangeListener(new CalendarView.OnDateChangeListener() {\r\n            @Override\r\n            public void onSelectedDayChange(@NonNull CalendarView view, int year, int month, int dayOfMonth) {\r\n                MainActivity.calendar.set(Calendar.MONTH, month);\r\n                MainActivity.calendar.set(Calendar.DATE, dayOfMonth);\r\n                MainActivity.calendar.set(Calendar.YEAR, year);\r\n                Log.d(\"Alert\", \"It is: \" + (MainActivity.calendar.get(Calendar.MONTH)+1) + \"/\" + MainActivity.calendar.get(Calendar.DATE) +\"/\" + MainActivity.calendar.get(Calendar.YEAR));\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/taskmaster/MonthViewFragment.java	(revision 0bbb3f162100517a63de5e8fe51e58e36a7ca717)
+++ app/src/main/java/com/example/taskmaster/MonthViewFragment.java	(date 1607795395521)
@@ -38,7 +38,7 @@
         recyclerView.setAdapter(new TaskListAdapter());
         return view;
     }
-
+/*
     @Override
     public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
         mCalendarView = (CalendarView) getView().findViewById(R.id.calendarView);
@@ -53,5 +53,5 @@
         });
 
     }
-
+*/
 }
Index: app/src/main/java/com/example/taskmaster/TaskListAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.taskmaster;\r\n\r\nimport android.graphics.Paint;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.CheckBox;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\n\r\nimport static com.example.taskmaster.MainActivity.tasks;\r\n\r\npublic class TaskListAdapter extends RecyclerView.Adapter<RecyclerViewHolder> {\r\n    public int counter = 0;\r\n    public static ArrayList<TaskObject> currentlyDisplayedTasks = new ArrayList<>();\r\n    public TaskListAdapter() {}\r\n\r\n    @Override\r\n    public int getItemViewType(final int position) {\r\n        return R.layout.frame_textview;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public RecyclerViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n\r\n        View view = LayoutInflater.from(parent.getContext()).inflate(viewType, parent, false);\r\n        return new RecyclerViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull RecyclerViewHolder holder, int position) {\r\n        //give each checkbox the id associated with the TaskObject\r\n        holder.getCheckBox().setId(tasks.getObject(position).getId());\r\n        //Give each textview the title and Id associated with the TaskObject\r\n        holder.getView().setText(tasks.getObject(position).getTitle());\r\n        holder.getView().setId(tasks.getObject(position).getId());\r\n\r\n\r\n        holder.getTrash().setId(tasks.getObject(position).getId());\r\n\r\n        //If the task is completed, go ahead and set the checkbox and strikethrough the text.\r\n        if (tasks.getObject(position).isDone()) {\r\n            holder.getView().setPaintFlags(holder.getView().getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);\r\n            holder.getCheckBox().setChecked(true);\r\n        }\r\n        else {\r\n            holder.getView().setPaintFlags(0);\r\n            holder.getCheckBox().setChecked(false);\r\n        }\r\n\r\n        //holder.getView().setText(tasks.getObject(position));\r\n        holder.getDueByView().setText(\"Due: \" + (tasks.getObject(position).getDueBy().get(Calendar.MONTH)+1) + \"/\" + tasks.getObject(position).getDueBy().get(Calendar.DATE) + \"/\" + tasks.getObject(position).getDueBy().get(Calendar.YEAR));\r\n        counter++;\r\n    }\r\n\r\n\r\n\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        if (tasks.equals(\"0\")) {\r\n            return 0;\r\n        } else {\r\n            return tasks.getSize();\r\n        }\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/taskmaster/TaskListAdapter.java	(revision 0bbb3f162100517a63de5e8fe51e58e36a7ca717)
+++ app/src/main/java/com/example/taskmaster/TaskListAdapter.java	(date 1607746262325)
@@ -18,7 +18,6 @@
 
 public class TaskListAdapter extends RecyclerView.Adapter<RecyclerViewHolder> {
     public int counter = 0;
-    public static ArrayList<TaskObject> currentlyDisplayedTasks = new ArrayList<>();
     public TaskListAdapter() {}
 
     @Override
@@ -37,16 +36,16 @@
     @Override
     public void onBindViewHolder(@NonNull RecyclerViewHolder holder, int position) {
         //give each checkbox the id associated with the TaskObject
-        holder.getCheckBox().setId(tasks.getObject(position).getId());
+        holder.getCheckBox().setId(MainActivity.displayList.getObject(position).getId());
         //Give each textview the title and Id associated with the TaskObject
-        holder.getView().setText(tasks.getObject(position).getTitle());
-        holder.getView().setId(tasks.getObject(position).getId());
+        holder.getView().setText(MainActivity.displayList.getObject(position).getTitle());
+        holder.getView().setId(MainActivity.displayList.getObject(position).getId());
 
 
-        holder.getTrash().setId(tasks.getObject(position).getId());
+        holder.getTrash().setId(MainActivity.displayList.getObject(position).getId());
 
         //If the task is completed, go ahead and set the checkbox and strikethrough the text.
-        if (tasks.getObject(position).isDone()) {
+        if (MainActivity.displayList.getObject(position).isDone()) {
             holder.getView().setPaintFlags(holder.getView().getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);
             holder.getCheckBox().setChecked(true);
         }
@@ -55,8 +54,8 @@
             holder.getCheckBox().setChecked(false);
         }
 
-        //holder.getView().setText(tasks.getObject(position));
-        holder.getDueByView().setText("Due: " + (tasks.getObject(position).getDueBy().get(Calendar.MONTH)+1) + "/" + tasks.getObject(position).getDueBy().get(Calendar.DATE) + "/" + tasks.getObject(position).getDueBy().get(Calendar.YEAR));
+        //holder.getView().setText(MainActivity.displayList.getObject(position));
+        holder.getDueByView().setText("Due: " + (MainActivity.displayList.getObject(position).getDueBy().get(Calendar.MONTH)+1) + "/" + MainActivity.displayList.getObject(position).getDueBy().get(Calendar.DATE) + "/" + MainActivity.displayList.getObject(position).getDueBy().get(Calendar.YEAR));
         counter++;
     }
 
@@ -65,10 +64,10 @@
 
     @Override
     public int getItemCount() {
-        if (tasks.equals("0")) {
+        if (MainActivity.displayList.equals("0")) {
             return 0;
         } else {
-            return tasks.getSize();
+            return MainActivity.displayList.getSize();
         }
     }
 
Index: app/src/main/java/com/example/taskmaster/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.taskmaster;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.graphics.Paint;\r\nimport android.media.MediaPlayer;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.EditText;\r\nimport android.widget.Switch;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.reflect.TypeToken;\r\n\r\nimport org.w3c.dom.Text;\r\n\r\nimport java.io.File;\r\nimport java.lang.reflect.Type;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.GregorianCalendar;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n    public static TaskList tasks;\r\n    public static Date sortByDate;\r\n    public static Calendar calendar = new GregorianCalendar();\r\n    MediaPlayer mp;\r\n    public int taskIdCounter = 0;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n\r\n//         NotificationCompat.Builder builder = new NotificationCompat.Builder(this, CHANNEL_ID)\r\n//                 .setSmallIcon(R.drawable.notification_icon)\r\n//                 .setContentTitle(textTitle)\r\n//                 .setContentText(textContent)\r\n//                 .setPriority(NotificationCompat.PRIORITY_DEFAULT);\r\n\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        BottomNavigationView bottomNav = findViewById(R.id.bottom_navigation);\r\n        bottomNav.setOnNavigationItemSelectedListener(navListener);\r\n        getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container, new DayViewFragment()).commit();\r\n\r\n        tasks = new TaskList();\r\n        File f = new File(\"/data/data/com.example.taskmaster/shared_prefs/shared preferences.xml\");\r\n        if (f.exists()){\r\n            loadData();\r\n        }\r\n\r\n    }\r\n\r\n    private BottomNavigationView.OnNavigationItemSelectedListener navListener =\r\n            new BottomNavigationView.OnNavigationItemSelectedListener() {\r\n                @Override\r\n                public boolean onNavigationItemSelected(@NonNull MenuItem item) {\r\n                    Fragment selectedFragment = null;\r\n                    switch (item.getItemId()) {\r\n                        case R.id.nav_new:\r\n                            selectedFragment = new NewTaskFragment();\r\n                            break;\r\n                        case R.id.nav_day:\r\n                            selectedFragment = new DayViewFragment();\r\n                            break;\r\n                        case R.id.nav_week:\r\n                            selectedFragment = new WeekViewFragment();\r\n                            break;\r\n                        case R.id.nav_month:\r\n                            selectedFragment = new MonthViewFragment();\r\n                            break;\r\n                    }\r\n                    getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container, selectedFragment).commit();\r\n                    return true;\r\n                }\r\n            };\r\n\r\n    //run if a checkbox is clicked by the user\r\n    public void itemChecked(View view) {\r\n        //get the required views\r\n        CheckBox checkBox = (CheckBox) view;\r\n        int num = checkBox.getId();\r\n        TextView t = (TextView) findViewById(num);\r\n\r\n        //if the checkbox is checked, find the TaskObject with the associated Id, mark it as done.\r\n        if (checkBox.isChecked()) {\r\n            playSound(view);\r\n            for (int i = 0; i < tasks.getSize(); i ++) {\r\n                if (tasks.getObject(i).getId() == num) {\r\n                    //mark the task done\r\n                    tasks.getObject(i).setDone(true);\r\n                    //strikethrough the text\r\n                    t.setPaintFlags(Paint.STRIKE_THRU_TEXT_FLAG);\r\n                    //Log.d(\"Alert\", tasks.getObject(i).getTitle() + \" is now set to \" + tasks.getObject(i).isDone());\r\n                    //play sound\r\n                }\r\n            }\r\n            //otherwise, mark it not done and remove the strikethrough\r\n        } else {\r\n            for (int i = 0; i < tasks.getSize(); i ++) {\r\n                if (tasks.getObject(i).getId() == num) {\r\n                    //set to false\r\n                    tasks.getObject(i).setDone(false);\r\n                    //remove strikethrough\r\n                    t.setPaintFlags(0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //play sound\r\n    public void playSound(View view) {\r\n        mp = MediaPlayer.create(this, R.raw.soundeffect1);\r\n        mp.setOnPreparedListener(new MediaPlayer.OnPreparedListener() {\r\n            @Override\r\n            public void onPrepared(MediaPlayer mp) {\r\n                mp.start();\r\n            }\r\n        });\r\n        mp.setOnCompletionListener(new MediaPlayer.OnCompletionListener() {\r\n            @Override\r\n            public void onCompletion(MediaPlayer mp) {\r\n                mp.release();\r\n            }\r\n        });\r\n    }\r\n\r\n    public void clickTrash(View view) {\r\n        Button button = (Button) view;\r\n        int num = button.getId();\r\n        for (int i = 0; i < tasks.getSize(); i ++) {\r\n            if (tasks.getObject(i).getId() == num) {\r\n                Log.d(\"Alert\", \"You tried to delete \" + tasks.getObject(i).getTitle());\r\n                tasks.removeObject(i);\r\n                saveData();\r\n\r\n                Intent intent = getIntent();\r\n                intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);\r\n                finish();\r\n                startActivity(intent);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void saveData() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"shared preferences\", MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        Gson gson = new Gson();\r\n        String json = gson.toJson(tasks);\r\n        editor.putString(\"task list\", json);\r\n        editor.apply();\r\n    }\r\n\r\n    private void loadData() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"shared preferences\", MODE_PRIVATE);\r\n        Gson gson = new Gson();\r\n        String json = sharedPreferences.getString(\"task list\", null);\r\n\r\n        tasks = gson.fromJson(json, TaskList.class);\r\n\r\n    }\r\n\r\n    //For the new task page\r\n    public void addNewTask(View view) {\r\n        //Gather all the user entered data\r\n        Switch repeat = (Switch)findViewById(R.id.switch3);\r\n        Switch notify = (Switch)findViewById(R.id.switch2);\r\n        boolean repeatValue = repeat.isChecked();\r\n        boolean notifyValue = notify.isChecked();\r\n        Button addTask = (Button)findViewById(R.id.button);\r\n        EditText title = (EditText)findViewById(R.id.TaskName);\r\n        String titleValue = title.getText().toString();\r\n        //Calendar dueBy;\r\n\r\n\r\n        //Create Object and add it to list\r\n        TaskObject taskObject = new TaskObject(titleValue, maximum(tasks), repeatValue, notifyValue);\r\n        taskIdCounter +=1;\r\n        tasks.addObject(taskObject);\r\n        Log.d(\"Alert\", \"\"+maximum(tasks));\r\n        saveData();\r\n        //When task is added, automatically go to Day View\r\n        Fragment changeFrag = new DayViewFragment();\r\n        getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container, changeFrag).commit();\r\n    }\r\n\r\n    public static int maximum(TaskList x) {\r\n        int maxSoFar = 0;\r\n        if(x.getSize() == 0) {return 0;}\r\n        for (int i = 0; i < x.getSize(); i++) {\r\n            if (x.getObject(i).getId() > maxSoFar) {\r\n                maxSoFar = x.getObject(i).getId();\r\n            }\r\n        }\r\n        return maxSoFar+1;\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/taskmaster/MainActivity.java	(revision 0bbb3f162100517a63de5e8fe51e58e36a7ca717)
+++ app/src/main/java/com/example/taskmaster/MainActivity.java	(date 1607797746954)
@@ -17,6 +17,7 @@
 import androidx.annotation.NonNull;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.fragment.app.Fragment;
+import androidx.fragment.app.FragmentTransaction;
 
 import com.google.android.material.bottomnavigation.BottomNavigationView;
 import com.google.gson.Gson;
@@ -32,12 +33,24 @@
 import java.util.Date;
 import java.util.GregorianCalendar;
 
+import static java.lang.String.valueOf;
+import static java.util.Calendar.DATE;
+import static java.util.Calendar.DAY_OF_MONTH;
+
 public class MainActivity extends AppCompatActivity {
     public static TaskList tasks;
     public static Date sortByDate;
     public static Calendar calendar = new GregorianCalendar();
     MediaPlayer mp;
     public int taskIdCounter = 0;
+    public TaskList dayViewTasks = new TaskList();
+    public TaskList weekViewTasks = new TaskList();
+    public TaskList monthViewTasks = new TaskList();
+    public static TaskList displayList = new TaskList();
+    public Calendar today = Calendar.getInstance();
+    public int day = today.get(Calendar.DAY_OF_YEAR);
+    public int week = today.get(Calendar.DAY_OF_YEAR)+7;
+    public int month = today.get(Calendar.DAY_OF_YEAR)+30;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -56,10 +69,26 @@
         getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container, new DayViewFragment()).commit();
 
         tasks = new TaskList();
+
         File f = new File("/data/data/com.example.taskmaster/shared_prefs/shared preferences.xml");
         if (f.exists()){
             loadData();
         }
+      /*
+        TaskObject t1 = new TaskObject("testy", 5, true, true);
+        t1.setDueBy(11, 12, 2020);
+        TaskObject t2 = new TaskObject("testy", 6, true, true);
+        t2.setDueBy(11, 18, 2020);
+        TaskObject t3 = new TaskObject("testy", 7, true, true);
+        t3.setDueBy(0, 1, 2021);
+        tasks.addObject(t1);
+        tasks.addObject(t2);
+        tasks.addObject(t3);*/
+
+
+        buildDisplayList();
+
+        displayList = dayViewTasks;
 
     }
 
@@ -74,12 +103,15 @@
                             break;
                         case R.id.nav_day:
                             selectedFragment = new DayViewFragment();
+                            displayList = dayViewTasks;
                             break;
                         case R.id.nav_week:
                             selectedFragment = new WeekViewFragment();
+                            displayList = weekViewTasks;
                             break;
                         case R.id.nav_month:
                             selectedFragment = new MonthViewFragment();
+                            displayList = monthViewTasks;
                             break;
                     }
                     getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container, selectedFragment).commit();
@@ -118,6 +150,7 @@
                 }
             }
         }
+        saveData();
     }
 
     //play sound
@@ -142,10 +175,11 @@
         int num = button.getId();
         for (int i = 0; i < tasks.getSize(); i ++) {
             if (tasks.getObject(i).getId() == num) {
-                Log.d("Alert", "You tried to delete " + tasks.getObject(i).getTitle());
                 tasks.removeObject(i);
+                Log.d("Alert", "wpoooow");
+                buildDisplayList();
+
                 saveData();
-
                 Intent intent = getIntent();
                 intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
                 finish();
@@ -183,13 +217,14 @@
         EditText title = (EditText)findViewById(R.id.TaskName);
         String titleValue = title.getText().toString();
         //Calendar dueBy;
-
-
         //Create Object and add it to list
         TaskObject taskObject = new TaskObject(titleValue, maximum(tasks), repeatValue, notifyValue);
+        taskObject.setDueBy(11, 12, 2020);
         taskIdCounter +=1;
+
         tasks.addObject(taskObject);
-        Log.d("Alert", ""+maximum(tasks));
+        buildDisplayList();
+        displayList = dayViewTasks;
         saveData();
         //When task is added, automatically go to Day View
         Fragment changeFrag = new DayViewFragment();
@@ -206,5 +241,25 @@
         }
         return maxSoFar+1;
     }
+
+    private void buildDisplayList() {
+        dayViewTasks = new TaskList();
+        weekViewTasks = new TaskList();
+        monthViewTasks = new TaskList();
+        for (int i=0; i < tasks.getSize(); i++) {
+            Calendar nn = tasks.getObject(i).getDueBy();
+            if (nn.get(Calendar.DAY_OF_YEAR) == day) {
+                dayViewTasks.addObject(tasks.getObject(i));
+            } else if (nn.get(Calendar.DAY_OF_YEAR) > day && nn.get(Calendar.DAY_OF_YEAR) < week)  {
+                weekViewTasks.addObject(tasks.getObject(i));
+            } else if (nn.get(Calendar.DAY_OF_YEAR) < month) {
+                monthViewTasks.addObject(tasks.getObject(i));
+            } else {
+                Log.d("Alert", "do nothing");
+            }
+        }
+    }
 }
+
+
 
